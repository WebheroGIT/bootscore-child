!function() {
    var e = {
        439: function(e, t, a) {
            var i = a(609);
            !function(e) {
                function t(e, t) {
                    t && e.append(t.jquery ? t.clone() : t)
                }

                var a;
                e.fn.printThis = function(n) {
                    a = e.extend({}, e.fn.printThis.defaults, n);
                    var o = this instanceof i ? this : e(this), c = "printThis-" + (new Date).getTime();
                    if(window.location.hostname !== document.domain && navigator.userAgent.match(/msie/i)) {
                        var r = 'javascript:document.write("<head><script>document.domain=\\"' + document.domain + '\\";<\/script></head><body></body>")',
                            s = document.createElement("iframe");
                        s.name = "printIframe", s.id = c, s.className = "MSIE", document.body.appendChild(s), s.src = r
                    } else e("<iframe id='" + c + "' name='printIframe' />").appendTo("body");
                    var l = e("#" + c);
                    a.debug || l.css({
                        position: "absolute",
                        width: "0px",
                        height: "0px",
                        left: "-600px",
                        top: "-600px"
                    }), "function" == typeof a.beforePrint && a.beforePrint(), setTimeout((function() {
                        a.doctypeString && function(e, t) {
                            var a, i;
                            (i = (a = (a = e.get(0)).contentWindow || a.contentDocument || a).document || a.contentDocument || a).open(), i.write(t), i.close()
                        }(l, a.doctypeString);
                        var n, c = l.contents(), r = c.find("head"), s = c.find("body"), d = e("base");
                        n = !0 === a.base && d.length > 0 ? d.attr("href") : "string" == typeof a.base ? a.base : document.location.protocol + "//" + document.location.host, r.append('<base href="' + n + '">'), a.importCSS && e("link[rel=stylesheet]").each((function() {
                            var t = e(this).attr("href");
                            if(t) {
                                var a = e(this).attr("media") || "all";
                                r.append("<link type='text/css' rel='stylesheet' href='" + t + "' media='" + a + "'>")
                            }
                        })), a.importStyle && e("style").each((function() {
                            r.append(this.outerHTML)
                        })), a.pageTitle && r.append("<title>" + a.pageTitle + "</title>"), a.loadCSS && (e.isArray(a.loadCSS) ? i.each(a.loadCSS, (function(e, t) {
                            r.append("<link type='text/css' rel='stylesheet' href='" + this + "'>")
                        })) : r.append("<link type='text/css' rel='stylesheet' href='" + a.loadCSS + "'>"));
                        var p = e("html")[0];
                        c.find("html").prop("style", p.style.cssText);
                        var u = a.copyTagClasses;
                        if(u && (-1 !== (u = !0 === u ? "bh" : u).indexOf("b") && s.addClass(e("body")[0].className), -1 !== u.indexOf("h") && c.find("html").addClass(p.className)), t(s, a.header), a.canvas) {
                            var h = 0;
                            o.find("canvas").addBack("canvas").each((function() {
                                e(this).attr("data-printthis", h++)
                            }))
                        }
                        if(function(t, a, i) {
                            var n, o, c, r = a.clone(i.formValues);
                            i.formValues && (n = r, o = "select, textarea", c = a.find(o), n.find(o).each((function(t, a) {
                                e(a).val(c.eq(t).val())
                            }))), i.removeScripts && r.find("script").remove(), i.printContainer ? r.appendTo(t) : r.each((function() {
                                e(this).children().appendTo(t)
                            }))
                        }(s, o, a), a.canvas && s.find("canvas").each((function() {
                            var t = e(this).data("printthis"), a = e('[data-printthis="' + t + '"]');
                            this.getContext("2d").drawImage(a[0], 0, 0), e.isFunction(e.fn.removeAttr) ? a.removeAttr("data-printthis") : e.each(a, (function(e, t) {
                                t.removeAttribute("data-printthis")
                            }))
                        })), a.removeInline) {
                            var m = a.removeInlineSelector || "*";
                            e.isFunction(e.removeAttr) ? s.find(m).removeAttr("style") : s.find(m).attr("style", "")
                        }
                        t(s, a.footer), function(e, t) {
                            var a = e.get(0);
                            a = a.contentWindow || a.contentDocument || a, "function" == typeof t && ("matchMedia" in a ? a.matchMedia("print").addListener((function(e) {
                                e.matches && t()
                            })) : a.onbeforeprint = t)
                        }(l, a.beforePrintEvent), setTimeout((function() {
                            l.hasClass("MSIE") ? (window.frames.printIframe.focus(), r.append("<script>  window.print(); <\/script>")) : document.queryCommandSupported("print") ? l[0].contentWindow.document.execCommand("print", !1, null) : (l[0].contentWindow.focus(), l[0].contentWindow.print()), a.debug || setTimeout((function() {
                                l.remove()
                            }), 1e3), "function" == typeof a.afterPrint && a.afterPrint()
                        }), a.printDelay)
                    }), 333)
                }, e.fn.printThis.defaults = {
                    debug: !1,
                    importCSS: !0,
                    importStyle: !1,
                    printContainer: !0,
                    loadCSS: "",
                    pageTitle: "",
                    removeInline: !1,
                    removeInlineSelector: "*",
                    printDelay: 333,
                    header: null,
                    footer: null,
                    base: !1,
                    formValues: !0,
                    canvas: !1,
                    doctypeString: "<!DOCTYPE html>",
                    removeScripts: !1,
                    copyTagClasses: !1,
                    beforePrintEvent: null,
                    beforePrint: null,
                    afterPrint: null
                }
            }(i)
        }, 609: function(e) {
            "use strict";
            e.exports = jQuery
        }
    }, t = {};

    function a(i) {
        var n = t[i];
        if(void 0 !== n) return n.exports;
        var o = t[i] = {exports: {}};
        return e[i](o, o.exports, a), o.exports
    }

    !function() {
        "use strict";
        a(439);
        var e = a(609);

        function t(t) {
            return e.ajax({url: t, type: "GET"})
        }

        function i(t, a) {
            e.each(a, (function(a, i) {
                let n = !1, o = e(t).find("div.modal-body");
                i.hasOwnProperty("text") ? n = i.text : i.hasOwnProperty("html") && (n = i.html), i.hasOwnProperty("appendTo") && (o = e(t).find(i.appendTo)), e("<" + i.elementType + "/>").attr(i.attr).html(!1 !== n ? n : "").appendTo(o)
            }))
        }

        var n = a(609);
        n(document).ready((function() {
            n('a[data-popover="popover"]').on("click", (function(e) {
                e.preventDefault()
            })), n.each(n('a[data-popover="popover"]'), (function(e, t) {
                let a = n(t).data(), i = n(t).attr("title");
                n(t).popover({container: "body", html: !0, trigger: a.trigger, content: a.content, title: i})
            })), n.each(n("a.multi-link-url"), (function(e, t) {
                n(t).popover({
                    container: "body", html: !0, trigger: "click", content: function() {
                        const e = n(this).data();
                        let t = [], a = 1;
                        for(; e.hasOwnProperty("teacher-" + a);) t.push('<a href="' + urls.courseDetailsUrl + n(this).data("courseId-" + a) + '/" data-teacher="' + n(this).data("teacher-" + a) + '" data-course-1="' + n(this).data("courseId-" + a) + '" class="single-link-url inside-popup" data-dismiss="popup">' + n(this).data("teacher-" + a) + "</a><br>"), a++;
                        return t.toString().replaceAll(",", "")
                    }
                })
            })), n(document).on("click", ".inside-popup", (function(e) {
                e.preventDefault(), n(this).closest(".popover").popover("hide")
            })), n("a.multi-link-url").on("click", (function(e) {
                e.preventDefault()
            })), n(document).on("click", (function(e) {
                const t = e.target;
                n(t).hasClass("multi-link-url") || "undefined" !== n(t).attr("data-popover") && !1 !== n(t).attr("data-popover") || n("div.popover").popover("hide")
            }));
            let e = !1,
                a = '<div class="modal fade" id="course-detail" tabindex="-1" role="dialog"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><h4 class="modal-title">Programma</h4></div><div class="modal-body"></div><div class="modal-footer"><div class="btn-group"><a class="btn btn-default btn-print"><i class="fa fa-print"></i>&nbsp;Stampa</a><button type="button" class="btn btn-default btn-copy-to-clipboard"><i class="fa fa-link"></i>&nbsp;Copia link</button><input type="text" id="copy-input" style="height: 1px; opacity: 0; position: absolute; z-index: -1" value="' + urls.coursePreview + '"><button type="button" class="btn btn-success" data-dismiss="modal"><i class="fa fa-times"></i>&nbsp;Chiudi</button></div></div></div></div></div>';

            function o(e) {
                const t = n(e).find("div.modal-body");
                n(t).append("Contenuto non disponibile"), n(".modal").modal("hide"), n(e).modal("show")
            }

            n(a).appendTo("body"), n('<div class="modal fade" id="teacher-detail" tabindex="-1" role="dialog"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><h4 class="modal-title">Scheda docente</h4></div><div class="modal-body"></div><div class="modal-footer"><div class="btn-group"><button type="button" class="btn btn-success" data-dismiss="modal"><i class="fa fa-times"></i>&nbsp;Chiudi</button></div></div></div></div></div>').appendTo("body"), n(document).on("hidden.bs.modal", "div.modal", (function(e) {
                n(this).find("div.modal-body").empty()
            })), n("#course-detail").on("hidden.bs.modal", (function(e) {
                var t = n("#copy-input"), a = t.val(), i = a.lastIndexOf("/");
                const o = a.substr(0, i + 1);
                t.attr("value", o)
            })), n(".btn-print").on("click", (function(e) {
                e.preventDefault();
                let t = new Date;
                const a = n(this).parents("div.modal-content").children().not("div.modal-footer");
                n(a).printThis({
                    header: '<div class="header"><span class="float-left">' + t.getDay().toString() + "/" + t.getMonth().toString() + "/" + t.getFullYear().toString() + '</span><span class="float-right">Università degli Studi Guglielmo Marconi - ' + window.location.pathname.replaceAll("/", "") + "</span></div>",
                    footer: '<div class="footer"><p class="text-right">' + window.location.href + "</p></div>"
                })
            })), n(".btn-copy-to-clipboard").on("click", (function(e) {
                e.preventDefault();
                let t = document.getElementById("copy-input");
                t.select(), t.setSelectionRange(0, 9999999999), document.execCommand("copy")
            })), n(document).on("click", "a.single-link-url", (function(a) {
                !function(a, c) {
                    c.preventDefault();
                    let r = n(a).attr("href");
                    let rarr = r.split('/');
                    const s = r.substr(r.lastIndexOf("/") + 1) !== '' ? r.substr(r.lastIndexOf("/") + 1) : rarr[rarr.length - 2];
                    !1 === e && (e = !0, n.when(t(n(a).attr("href") + "/").done((t => {
                        try {
                            const a = JSON.parse(t);
                            if("success" in a && !0 === a.success) {
                                i("#course-detail", function(e) {
                                    let t = [];
                                    if(!1 !== e.chair_short_title && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-content"},
                                        appendTo: ".course-detail-container",
                                        text: "Insegnamento"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-teacher-content"},
                                        appendTo: ".course-detail-container",
                                        text: e.chair_short_title
                                    }), !1 !== e.teacher) {
                                        const a = ("F" === e.teacher_gender.toUpperCase() ? "Prof.ssa " : "Prof. ") + e.teacher;
                                        t.push({
                                            elementType: "div",
                                            text: "",
                                            attr: {class: "course-detail-teacher-container"},
                                            appendTo: "div.modal-body"
                                        }, {
                                            elementType: "h5",
                                            attr: {class: "course-detail-teacher-title"},
                                            appendTo: ".course-detail-teacher-container",
                                            text: "Docente"
                                        }, {
                                            elementType: "a",
                                            attr: {class: "course-detail-teacher-content", href: "#", "data-teacher": e.teacher_id},
                                            text: a,
                                            appendTo: ".course-detail-teacher-container"
                                        })
                                    }
                                    return !1 !== e.ssd && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-sector-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-sector-title"},
                                        text: "Settore scientifico Disciplinare",
                                        appendTo: ".course-detail-sector-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-sector-content"},
                                        text: e.ssd,
                                        appendTo: ".course-detail-sector-container"
                                    }), !1 !== e.credits && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-cfu-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-cfu-title"},
                                        text: "CFU",
                                        appendTo: ".course-detail-cfu-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-cfu-content"},
                                        text: e.credits,
                                        appendTo: ".course-detail-cfu-container"
                                    }), !1 !== e.description && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-description-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-description-title"},
                                        text: "Descrizione dell'insegnamento",
                                        appendTo: ".course-detail-description-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-description-content"},
                                        html: e.description,
                                        appendTo: ".course-detail-description-container"
                                    }), !1 !== e.didactic_objectives && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-objectives-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail"},
                                        text: "Obiettivi formativi (espressi come risultati di apprendimento attesi)",
                                        appendTo: ".course-detail-objectives-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-objectives-content"},
                                        html: e.didactic_objectives,
                                        appendTo: ".course-detail-objectives-container"
                                    }), !1 !== e.prerequisites && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-prerequisites-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-prerequisites-title"},
                                        text: "Prerequisiti",
                                        appendTo: ".course-detail-prerequisites-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-prerequisites-content"},
                                        html: e.prerequisites,
                                        appendTo: ".course-detail-prerequisites-container"
                                    }),!1 !== e.program && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-content-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-content-title"},
                                        text: "Contenuti dell'insegnamento",
                                        appendTo: ".course-detail-content-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-content-content"},
                                        html: e.program,
                                        appendTo: ".course-detail-content-container"
                                    }), !1 !== e.didactic_activities && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-activities-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-activities-title"},
                                        html: "Attivit&agrave; didattiche",
                                        appendTo: ".course-detail-activities-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-activities-content"},
                                        html: e.didactic_activities,
                                        appendTo: ".course-detail-activities-container"
                                    }),!1 !== e.evaluation_criteria && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-criteria-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-criteria-title"},
                                        html: "Criteri di valutazione",
                                        appendTo: ".course-detail-criteria-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-criteria-content"},
                                        html: e.evaluation_criteria,
                                        appendTo: ".course-detail-criteria-container"
                                    }),!1 !== e.final_examination_mode && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-final_examination_mode-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-final_examination_mode-title"},
                                        html: "Modalit&agrave; della prova finale",
                                        appendTo: ".course-detail-final_examination_mode-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-final_examination_mode-content"},
                                        html: e.final_examination_mode,
                                        appendTo: ".course-detail-final_examination_mode-container"
                                    }),!1 !== e.learning_check && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-verification-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-verification-title"},
                                        html: "Modalit&agrave; di verifica dell'apprendimento",
                                        appendTo: ".course-detail-verification-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-verification-content"},
                                        html: e.learning_check,
                                        appendTo: ".course-detail-verification-container"
                                    }), !1 !== e.books && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-books-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-books-title"},
                                        text: "Libri di testo",
                                        appendTo: ".course-detail-books-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-books-content"},
                                        html: e.books,
                                        appendTo: ".course-detail-books-container"
                                    }), !1 !== e.student_reception && t.push({
                                        elementType: "div",
                                        text: "",
                                        attr: {class: "course-detail-receiving-container"},
                                        appendTo: "div.modal-body"
                                    }, {
                                        elementType: "h5",
                                        attr: {class: "course-detail-receiving-title"},
                                        text: "Ricevimento studenti",
                                        appendTo: ".course-detail-receiving-container"
                                    }, {
                                        elementType: "p",
                                        attr: {class: "course-detail-receiving-content"},
                                        html: e.student_reception,
                                        appendTo: ".course-detail-receiving-container"
                                    }), t
                                }(a.program)), n("#course-detail").modal("toggle");
                                const t = n("#copy-input").val().concat(s);
                                n("#copy-input").attr("value", t), e = !1
                            } else o("#course-detail"), e = !1
                        } catch(t) {
                            o("#course-detail"), e = !1
                        }
                    }))))
                }(this, a)
            })), n(document).on("click", "a.course-detail-teacher-content, a.teacher-details", (function(a) {
                a.preventDefault();
                const c = n(this).data("teacher");
                if(!1 === e) {
                    e = !0;
                    try {
                        n.when(t(urls.teacherDetails + c + "/")).fail((() => {
                            o("#teacher-detail")
                        })).done((t => {
                            e = !1;
                            let a = {success: !1};
                            try {
                                a = JSON.parse(t)
                            } catch(e) {
                                throw o("#teacher-detail"), new Error("ops")
                            }
                            !0 === a.success ? (i("#teacher-detail", function(e) {
                                let t = [];
                                return e.fullname && t.push({
                                    elementType: "h4",
                                    attr: {class: "teacher-name"},
                                    text: e.fullname
                                }), e.curricula_title && t.push({
                                    elementType: "h5",
                                    attr: {class: "teacher-qualification"},
                                    text: e.curricula_title
                                }), e.curricula_image && t.push({
                                    elementType: "img",
                                    attr: {class: "teacher-photo", alt: "teacher-photo", src: e.curricula_image}
                                }), e.curricula_description && t.push({
                                    elementType: "div",
                                    attr: {class: "teacher-bio"},
                                    html: e.curricula_description
                                }), (e.curricula_scientific || e.curricula_research || e.curricula_publications) && t.push({
                                    elementType: "ul",
                                    attr: {class: "teacher-attachments"}
                                }), e.curricula_scientific && t.push({
                                    elementType: "li",
                                    attr: {class: "teacher-scientific-list"},
                                    appendTo: ".teacher-attachments"
                                }, {
                                    elementType: "a",
                                    attr: {class: "teacher-scientific", href: e.curricula_scientific, target: "_blank"},
                                    text: "Curriculum scientifico completo",
                                    appendTo: ".teacher-scientific-list"
                                }), e.curricula_research && t.push({
                                    elementType: "li",
                                    attr: {class: "teacher-research-list"},
                                    appendTo: ".teacher-attachments"
                                }, {
                                    elementType: "a",
                                    attr: {class: "teacher-curricula-research", href: e.curricula_research, target: "_blank"},
                                    text: "Ambito di ricerca",
                                    appendTo: ".teacher-research-list"
                                }), e.curricula_publications && t.push({
                                    elementType: "li",
                                    attr: {class: "teacher-publications-list"},
                                    appendTo: ".teacher-attachments"
                                }, {
                                    elementType: "a",
                                    attr: {class: "curricula-publications", href: e.curricula_publications, target: "_blank"},
                                    text: "Pubblicazioni",
                                    appendTo: ".teacher-publications-list"
                                }), e.curricula_email_institutional && t.push({
                                    elementType: "a",
                                    attr: {class: "teacher-email", href: "mailto: " + e.curricula_email_institutional},
                                    text: e.curricula_email_institutional
                                }), t
                            }(a.curricula)), n("#course-detail").modal("hide"), n("#teacher-detail").on("shown.bs.modal", (() => {
                                n("body").addClass("modal-open")
                            })), n("#teacher-detail").modal("show")) : o("#teacher-detail")
                        }))
                    } catch(a) {
                        o("#teacher-detail")
                    }
                }
            })), n("div.search").on("click tap", (function() {
                setTimeout((function() {
                    n('input[type="search"]:visible').focus()
                }), 500)
            }))
        }))
    }()
}();
//# sourceMappingURL=frontend.min.js.map
